[{"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/index.js":"1","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/reportWebVitals.js":"2","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/App.js":"3","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/Header.js":"4","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/pages/Home.js":"5","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/pages/NewPost.js":"6","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/pages/PostView.js":"7","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/BlogForm.js":"8","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/BlogList.js":"9","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/rootReducer.js":"10","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/BlogListItem.js":"11","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/actionCreators.js":"12"},{"size":1014,"mtime":1607145989566,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606965663806,"results":"15","hashOfConfig":"14"},{"size":540,"mtime":1607022013843,"results":"16","hashOfConfig":"14"},{"size":396,"mtime":1606971438734,"results":"17","hashOfConfig":"14"},{"size":250,"mtime":1607020927061,"results":"18","hashOfConfig":"14"},{"size":1265,"mtime":1607235757041,"results":"19","hashOfConfig":"14"},{"size":3029,"mtime":1607306049548,"results":"20","hashOfConfig":"14"},{"size":734,"mtime":1607020468065,"results":"21","hashOfConfig":"14"},{"size":1838,"mtime":1607316064851,"results":"22","hashOfConfig":"14"},{"size":2954,"mtime":1607315540611,"results":"23","hashOfConfig":"14"},{"size":364,"mtime":1607315922178,"results":"24","hashOfConfig":"14"},{"size":3720,"mtime":1607315687187,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1eje9q9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/index.js",[],["52","53"],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/reportWebVitals.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/App.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/Header.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/pages/Home.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/pages/NewPost.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/pages/PostView.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/BlogForm.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/BlogList.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/rootReducer.js",["54","55","56"],"const DEFAULT_STATE = {\n    titles: [],\n    posts: {},\n    error: false\n}\n\nconst rootReducer = (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case \"FETCH_TITLES\": {\n            console.log(\"Root reducer is fetching titles\");\n            return {...state, titles: action.titles};\n        }\n\n        case \"FETCH_POST\": {\n            console.log(\"Root reducer is fetching post\")            \n            return {...state, posts: {...state.posts, ...action.post}}\n        }\n\n        case \"ADD_POST\": {\n            const postsCopy = {...state.posts};\n            console.log(\"Root reducer is adding post\");\n            postsCopy[action.post.id] = action.post;\n            return {...state, posts: postsCopy}\n        }\n\n        case \"ADD_TITLE\": {\n            console.log(\"Root reducer is adding title\");\n            console.log(`Title being added is : ${action.title}`)\n            const titlesCopy = [...state.titles];\n            const updatedTitles = [...titlesCopy, action.title]\n            return {...state, titles: updatedTitles};\n        }\n        \n        case \"DELETE_POST\": {\n            const postsCopy = {...state.posts};\n            delete postsCopy[action.postId]\n            return {\n                ...state,\n                posts: postsCopy\n            }\n        }\n\n        case \"DELETE_TITLE\": {\n            const titlesCopy = [...state.titles];\n            const foundTitle = titlesCopy.find(title => title.id == action.postId);\n            const index = titlesCopy.indexOf(foundTitle);\n            titlesCopy.splice(index, 1);\n            return {...state, titles: titlesCopy}\n        }\n\n        case \"ADD_COMMENT\": {\n            const postsCopy = {...state.posts};\n            const comments = postsCopy[action.postId].comments;\n            comments.push(action.comment);\n            return {...state, posts: postsCopy};\n        }\n\n        case \"DELETE_COMMENT\": {\n            const postsCopy = {...state.posts};\n            const comments = postsCopy[action.postId].comments;\n            const comment = comments.find((comment) => comment.id===action.commentId);\n            const indexOfComment = comments.indexOf(comment);\n            comments.splice(indexOfComment, 1);\n            return {...state, posts: postsCopy};\n        }\n\n        case \"UPVOTE_POST\": {\n            const titlesCopy = [...state.titles];\n            const foundTitle = titlesCopy.find((title) => title.id == action.postId);\n            foundTitle.votes++;\n            return {...state, titles: titlesCopy}\n        }\n\n        case \"DOWNVOTE_POST\": {\n            const titlesCopy = [...state.titles];\n            const foundTitle = titlesCopy.find((title) => title.id == action.postId);\n            foundTitle.votes--;\n            return {...state, titles: titlesCopy}\n        }\n\n\n        case \"ERROR\" : {\n            return {...state, error: true};\n        }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/components/BlogListItem.js",[],"/Users/jorgeweiss/Documents/springboard/redux-react/microblog/src/actionCreators.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":45,"column":66,"nodeType":"63","messageId":"64","endLine":45,"endColumn":68},{"ruleId":"61","severity":1,"message":"62","line":69,"column":68,"nodeType":"63","messageId":"64","endLine":69,"endColumn":70},{"ruleId":"61","severity":1,"message":"62","line":76,"column":68,"nodeType":"63","messageId":"64","endLine":76,"endColumn":70},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]